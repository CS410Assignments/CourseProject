{
    "0": "Recommender Systems: Collaborative Filtering\n \n \nChengXiang\n \n\n \nDepartment of Computer Science\n \nUniversity of Illinois at Urbana\n-\nChampaign\n \n1\n \n",
    "1": "Recommender Systems: Collaborative Filtering\n \n2\n \nBig Text Data\n \nSmall Relevant Data\n \n  \nSearch Engine\n \nRecommender \n \nSystem\n \n2. Text Access\n \n11. Recommendation\n \n3. Text Retrieval Problem\n \n10. Web Search\n \nUser\n \n1. Natural Language Content Analysis\n \n4. Text Retrieval Methods\n \n7. Evaluation \n \n6. System \n \nImplementation\n \n5. Vector Space Model\n \n8. Probabilistic Model \n \n9. Feedback  \n \n",
    "2": "Basic Filtering Question: Will \nuser \nU\n \nlike item \nX\n?\n \n \n \n\nTwo \ndifferent ways of answering it\n \n\nLook at what \nitems U likes, and then check if X is similar  \n \n \n \n\nLook at who likes X, and then check if U is similar \n \n \n \n\nCan be combined\n \nItem similarity  \n=> content\n-\nbased filtering\n \nUser similarity \n=> collaborative filtering\n \n",
    "3": "4\n \nWhat is Collaborative Filtering (CF)?\n \n\nMaking filtering decisions for an individual user based \non the judgments of other users\n \n\n\nother similar users\n \n\nGeneral idea\n \n\nGiven a user \nu\n, find similar users {\nu\n1\n\nm\n}\n \n\nPredict \nu\n\nu\n1\n\nm\n \n \n\nUser similarity can be judged based on their similarity in \npreferences on a common set of items\n \n",
    "4": "5\n \nCF: Assumptions\n \n\nUsers with the same interest will have similar preferences  \n \n\nUsers with similar preferences probably share the same \ninterest\n \n\nExamples\n \n\n\n \n\n\n \n\nSufficiently large number of user preferences are \n\n \n \n",
    "5": "6\n \nThe Collaboration Filtering Problem\n \nu\n1\n \nu\n2\n \n\n \n \nu\ni\n \n...\n \n \nu\nm\n \n \n \nUsers: U\n \nObjects: O\n \no\n1     \n  \no\n2    \n  \n\n \no\nj  \n \n\nn \n \n \n\n \n \n \n2\n \n \n1\n \n \n \n \n3                   \n \nX\nij\n=f(u\ni\n,o\nj\n)=?\n \n?\n \nThe task\n \nUnknown function \n \nf: U \nx\n \nO\n\n \nR\n \n\nAssume known f values for \n\n \n\n\n \n\nEssentially function \napproximation, like other \nlearning problems\n \nRatings\n \n",
    "6": "7\n \nMemory\n-\nbased Approaches \n \n\nGeneral ideas:\n \n\nX\nij\n: rating of object \no\nj\n \nby user \nu\ni\n \n\nn\ni\n: average rating of all objects by user \nu\ni\n \n\nNormalized ratings: \nV\nij\n \n= \nX\nij\n \n\n \nn\ni\n \n \n\nP\nrediction of rating of object \no\nj\n \nby user \nu\na\n \n \n \n \n\nSpecific approaches differ in w(\na,i\n) \n--\n \nthe \ndistance/similarity between user \nu\na\n \nand \nu\ni\n \n",
    "7": "8\n \nUser Similarity Measures\n \n\nPearson correlation coefficient (sum over commonly \nrated items)\n \n \n \n\nCosine measure\n \n \n \n\nMany other possibilities!\n \n",
    "8": "9\n \nImproving User Similarity Measures\n \n\nDealing with missing values: set to default ratings \n(e.g., average ratings)\n \n\nInverse User Frequency (IUF): similar to IDF\n \n",
    "9": "10\n \nSummary of Recommender Systems\n \n\n\n \n\n\n \n\nAny recommendation is better than none\n \n\n\n \n\nMust make a binary decision, though ranking is also possible\n \n\nData sparseness (limited feedback information)\n \n\n\n \n\nContent\n-\nbased vs. Collaborative filtering vs. Hybrid \n \n\nRecommendation can be combined with search  \n\n \nPush + Pull \n \n\nMany advanced algorithms have been proposed to use more \ncontext information and advanced machine learning \n \n \n",
    "10": "Additional Readings\n \n\nFrancesco Ricci, \nLior\n \nRokach, \nBracha\n \nShapira, Paul B. \nKantor: Recommender \nSystems Handbook. Springer \n2011. \n \nhttp://\nwww.cs.bme.hu/nagyadat/Recommender_syste\nms_handbook.pdf\n \n \n11\n \n"
}